;Programa que limpia pantalla y escribe una cadena en el rengl√≥n12, columna 30.
DATOS SEGMENT PARA 'DATA'
  REN     DB      10
  COL     DB      10
DATOS ENDS

PILA SEGMENT PARA STACK 'STACK'
  DW      100     DUP(0)
PILA ENDS

CODIGO SEGMENT PARA 'CODE'
  ASSUME  CS:CODIGO, DS:DATOS, SS:PILA, ES:NOTHING

  LIMPIA_PANTALLA PROC NEAR
     MOV AX, 0600H
     MOV BH, 07H     ; 71H Fondo=blanco frente=AZUL, 07 Fo=negro Fr=blanco
     MOV CX, 0000H
     MOV DX, 184FH
     INT 10H
     RET
  LIMPIA_PANTALLA ENDP

  POSICIONA_CURSOR PROC NEAR
     MOV AH,02
     MOV BH,00
     MOV DH,REN
     MOV DL,COL
     INT 10H
     RET
  POSICIONA_CURSOR ENDP

  LEE_SIN_ECO PROC NEAR
     MOV AH,10H
     INT 16H
     RET
  LEE_SIN_ECO ENDP

  ESCRIBE_AST PROC NEAR
     MOV DL,'*'
     MOV AH,02
     INT 21H
     RET
  ESCRIBE_AST ENDP

  FLECHA_ARRIBA PROC NEAR
            ;  ARRI 48, ABAJO 50, DER 4D, IZQ 4B, ESC 01 1B 
     CALL ESCRIBE_AST
     CMP REN,0
     JNE FIN1
     MOV REN,24
     JMP POSI
 FIN1:
     DEC REN
 POSI:CALL POSICIONA_CURSOR
     RET
  FLECHA_ARRIBA ENDP

  FLECHA_ABAJO PROC NEAR
     RET
  FLECHA_ABAJO ENDP

  PRINCIPAL PROC FAR
     PUSH DS
     XOR AX, AX
     PUSH AX
     MOV AX, DATOS
     MOV DS, AX
     MOV ES, AX
     CALL LIMPIA_PANTALLA
     CALL POSICIONA_CURSOR
 CICLO:
     CALL LEE_SIN_ECO
     CMP AL,00
     JE SIGCOMP
     CMP AL,0E0H
     JE SIGCOMP
     CMP AL,1BH  ;CODIGO PARA EL 'ESC'
     JE SIG2
     JMP CICLO
SIGCOMP:
     CMP AH,48H
     JNE SIG
     CALL FLECHA_ARRIBA
     JMP CICLO
 SIG:CMP AH,50H
     JNE SIG2
     CALL FLECHA_ABAJO
     JMP CICLO
SIG2:CMP AH,01
     JNE CICLO
FIN: RET
  PRINCIPAL ENDP

CODIGO ENDS
  END PRINCIPAL